diff --git a/Settings/res/values/strings.xml b/Settings/res/values/strings.xml
index 10095419..c1e641c9 100644
--- a/Settings/res/values/strings.xml
+++ b/Settings/res/values/strings.xml
@@ -224,6 +224,8 @@
     <string name="restart_button_label">Restart</string>
     <!-- Button to shutdown the device [CHAR LIMIT=40] -->
     <string name="shutdown_button_label">Shutdown</string>
+    <!-- Button to reboot to recovery [CHAR LIMIT=40] -->
+    <string name="reboot_to_recovery_button_label">Reboot to Recovery</string>
     <!-- Preference which shows legal info. [CHAR LIMIT=50] -->
     <string name="about_legal_info">Legal information</string>
     <!-- Preference which shows open source licenses [CHAR LIMIT=50]-->
@@ -935,6 +937,8 @@
     <string name="system_desc_reboot_confirm">To update this setting, your device needs to be restarted</string>
     <!-- Title for shutdown confirmation in System Settings Developer options [CHAR LIMIT=50] -->
     <string name="system_shutdown_confirm">Shutdown now?</string>
+    <!-- Title for reboot to recovery in System Settings Developer options [CHAR LIMIT=50] -->
+    <string name="system_reboot_to_recovery_confirm">Reboot to Recovery now?</string>
     <!-- Title for HDCP checking option in System Settings Developer options [CHAR LIMIT=50] -->
     <string name="system_never_check">Never check</string>
     <!-- Title for HDCP checking option in System Settings Developer options [CHAR LIMIT=50] -->
diff --git a/Settings/res/xml/device_info_settings.xml b/Settings/res/xml/device_info_settings.xml
index aabb6773..2cb7c0f8 100644
--- a/Settings/res/xml/device_info_settings.xml
+++ b/Settings/res/xml/device_info_settings.xml
@@ -46,6 +46,10 @@
         android:title="@string/shutdown_button_label"
         android:fragment="com.android.tv.settings.about.ShutdownConfirmFragment" />
 
+    <Preference android:key="reboot_to_recovery"
+        android:title="@string/reboot_to_recovery_button_label"
+        android:fragment="com.android.tv.settings.about.RebootToRecoveryConfirmFragment" />
+
     <!-- Device status - launches activity -->
     <Preference android:key="status_info"
         android:title="@string/device_status"
diff --git a/Settings/src/com/android/tv/settings/about/RebootToRecoveryConfirmFragment.java b/Settings/src/com/android/tv/settings/about/RebootToRecoveryConfirmFragment.java
new file mode 100644
index 00000000..65d849e8
--- /dev/null
+++ b/Settings/src/com/android/tv/settings/about/RebootToRecoveryConfirmFragment.java
@@ -0,0 +1,89 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package com.android.tv.settings.about;
+
+import android.content.Context;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.os.PowerManager;
+import android.support.annotation.Keep;
+import android.support.annotation.NonNull;
+import android.support.v17.leanback.app.GuidedStepFragment;
+import android.support.v17.leanback.widget.GuidanceStylist;
+import android.support.v17.leanback.widget.GuidedAction;
+import android.view.View;
+
+import com.android.tv.settings.R;
+
+import java.util.List;
+
+@Keep
+public class RebootToRecoveryConfirmFragment extends GuidedStepFragment {
+
+    public static RebootToRecoveryConfirmFragment newInstance() {
+        return new RebootToRecoveryConfirmFragment();
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+        setSelectedActionPosition(1);
+    }
+
+    @Override
+    public @NonNull
+    GuidanceStylist.Guidance onCreateGuidance(Bundle savedInstanceState) {
+        return new GuidanceStylist.Guidance(
+                getString(R.string.system_reboot_to_recovery_confirm),
+                null,
+                getString(R.string.about_preference),
+                getActivity().getDrawable(R.drawable.ic_warning_132dp)
+        );
+    }
+
+    @Override
+    public void onCreateActions(@NonNull List<GuidedAction> actions,
+            Bundle savedInstanceState) {
+        final Context context = getActivity();
+        actions.add(new GuidedAction.Builder(context)
+                .id(GuidedAction.ACTION_ID_OK)
+                .title(R.string.reboot_to_recovery_button_label)
+                .build());
+        actions.add(new GuidedAction.Builder(context)
+                .clickAction(GuidedAction.ACTION_ID_CANCEL)
+                .build());
+    }
+
+    @Override
+    public void onGuidedActionClicked(GuidedAction action) {
+        if (action.getId() == GuidedAction.ACTION_ID_OK) {
+            final PowerManager pm =
+                    (PowerManager) getActivity().getSystemService(Context.POWER_SERVICE);
+
+            new AsyncTask<Void, Void, Void>() {
+                @Override
+                protected Void doInBackground(Void... params) {
+                    pm.reboot("recovery");
+                    return null;
+                }
+            }.execute();
+        } else {
+            getFragmentManager().popBackStack();
+        }
+    }
+}
